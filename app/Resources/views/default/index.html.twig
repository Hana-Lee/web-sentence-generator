{% extends 'base.html.twig' %}
{% block stylesheets %}
    <style type="text/css">
        body {
            background-color: #ddd;
        }
        .webix_view, .webix_el_box .webixtype_form {
            font-family: 'PT Sans', Tahoma, 'Nanum Gothic', 'Malgun Gothic', serif;
        }
        .t_center .webix_cell {
            text-align: center;
        }
        .webix_view.webix_form.word_input {
            border-radius: 6px;
        }
        .word_input.dt_noun {
            background-color: #CD812B;
        }
        .word_input.dt_verb {
            background-color: #F17075;
        }
        .word_input.dt_adverb {
            background-color: #7B6A97;
        }
        .word_input.dt_adjective {
            background-color: #608F63;
        }
        .word_input .webix_el_label {
            font-size: 30px;
            color: whitesmoke;
        }
        .main_container {
            margin: 0 auto;
        }
        .hide {
            display:none !important;
        }
        .inline_block {
            display: inline-block;
        }
        .love_heart {
            width: 100%;
            height: 100%;
            margin: auto 0;
            background-image: url({{ asset('images/love_heart_512.png') }});
        }
        .love_heart div {
            font-size: 50px;
            margin: auto 0;
            padding-top: 200px;
            text-align: center;
        }
        .webix_ss_header .webix_hs_center table td div.webix_hcell {
            text-align: center;
        }
        .new_word_value {
            background-color:#FFAAAA;
        }
        .word_datatable_row_hover {
            background-color:#F0DCB6;
        }
        .checked_row {
            background-color: #DDFFDD;
        }
        .webix_column.sentence .webix_cell {
            font-size: 14px;
        }
        .webix_cell p {
            margin: 0;
            /*font-size: 12px;*/
        }
	    .webix_list_item.webix_selected {
		    background: lightgreen;
	    }
    </style>
{% endblock %}

{% block javascripts %}
    <script type="text/javascript" charset="UTF-8">
        "use strict";

        webix.i18n.setLocale("ko-KR");

        function isUndefined(value) {return typeof value === "undefined";}

        if (isUndefined(window.sg)) {
            window.sg = {};
        }

        var sgWord = {
            noun: {id: "noun", name: "명사", code: 0},
            verb: {id: "verb", name: "동사", code: 1},
            adverb: {id: "adverb", name: "부사", code: 2},
            adjective: {id: "adjective", name: "형용사", code: 3}
        };

        var sgGenre = {
            poetry : {id:"poetry", name:"시", code:0},
            nursery_rime : {id:"nursery_rime", name:"동시", code:1},
            novel : {id:"novel", name:"소설", code:2},
            essay : {id:"essay", name:"수필", code:3},
            fairy_tail : {id: "fairy_tail", name : "동화", code:4},
            etc : {id: "etc", name : "기타", code:5}
        };

        var sgContext = {
            currentMenuId : "show_word",
	        settingValue: getSettingValue()
        };

        var sgRateCharacter = {
            1 : "♥♡♡♡♡",
            2 : "♥♥♡♡♡",
            3 : "♥♥♥♡♡",
            4 : "♥♥♥♥♡",
            5 : "♥♥♥♥♥"
        };

        sg.context = sgContext;
        sg.word = sgWord;
        sg.genre = sgGenre;
        sg.dataTable = {
            prefix : "dt_"
        };
        sg.rateCharacter = sgRateCharacter;

        function showLovePopup() {
            webix.ui({
                view:"popup",
                width: 542, height:542,
                position:"center",
                head:"사랑합니다",
                body: {
                    template:"<div class='love_heart'><div>사랑합니다</div></div>"
                }
            }).show();
        }

        function showMessagePopup(message) {
            webix.alert({
                title:"확인",
                type:"alert-error",
                ok:"닫기",
                text:message
            });
        }

        function updateWord(data) {
            webix.ajax().headers({
                "Content-type":"application/json"
            }).post("update/word", JSON.stringify(data), function(text, obj, response){
                if (response.status === 200) {
                    showMessagePopup(text);
                } else {
                    showMessagePopup("업데이트 실패");
                }
            });
        }
        function getWordDataTable(word, genre) {
            if (isUndefined(genre)) {
                genre = sg.genre.poetry;
            }
            return {
                id: sg.dataTable.prefix + word.id, view: "datatable", columns: [
                    {id: "number", header: "No.", width: 50, css: "t_center"},
                    {id: "status", header: {content: "masterCheckbox"}, template: "{common.checkbox()}", width: 40},
                    {id: "word", header: "단어", sort:"string", fillspace: true, editor:"text"},
                    {id: "created", header: "만든날", sort:"int", format:webix.i18n.fullDateFormatStr, width: 140, css: "t_center"}
                ],
                editable:true,
                data: getWordData(word, genre),
                hover:"word_datatable_row_hover",
                select:false,
                on : {
                    onItemClick : function(id, event, node) {
                        if (id.column !== "word") {
                            var item = this.getItem(id.row);
                            item.status = !item.status;
                            if (item.status) {
                                this.addRowCss(id.row, "checked_row");
                            } else {
                                this.removeRowCss(id.row, "checked_row");
                            }
                            this.refresh(id.row);
                        }
                    },
                    onDataUpdate: function(id, data) {
                        updateWord(data);
                    }
                }
            }
        }

        function getGeneratedSentence(genre) {
            var wordData = getWordDataByGenre(genre);
            var totalSentenceCount = Number(sg.context.settingValue.sentenceCount);
            var result = [];

            if (wordData.length === 4) {
                var wordList = [];

	            var settingValue = sg.context.settingValue;
	            var count = 0;
	            var randomWordCount = 0;
	            var normalWordIndexList = [];
	            for (var key in settingValue) {
		            if (settingValue.hasOwnProperty(key)) {
			            if (key === "firstType" || key === "secondType" || key === "thirdType" || key === "fourthType") {
				            var generateType = settingValue[key];

				            switch(generateType) {
					            case "0":// noun
					            case "1":// verb
					            case "2":// adverb
					            case "3":// adjective
						            wordList[count] = wordData[generateType];
						            normalWordIndexList.push(count);
						            count++;
						            break;
					            case "4":// random
						            wordList[count] = "";
						            count++;
						            break;
					            case "5":// none
						            break;
				            }
			            }
		            }
	            }

	            if (normalWordIndexList.length > 0) {
		            count = 0;
		            $(normalWordIndexList).each(function(index, elem) {
			            wordData.splice(Number(elem) - count, 1);
			            count++;
		            });
	            }

                for (var i = 0; i < wordList.length; i++) {
	                var spliceData = [];
	                if (wordData.length > 1) {
		                var randomNumber = getRandomNumber(wordData.length);
		                spliceData = wordData.splice(randomNumber, 1)[0];
	                } else {
		                spliceData = wordData[0];
	                }

	                $(wordList).each(function(index, elem) {
		                if (elem === "") {
			                wordList[index] = spliceData;
			                return false;
		                }
	                });
                }

	            var newWordData = [];
	            $(wordList).each(function(index, elem) {
		            var mixedWordList = mixingWord(elem, totalSentenceCount);
		            newWordData.push(mixedWordList);
	            });

	            var createdDate = new Date();
	            var createdTimestamp = createdDate.getTime();

	            for (var j = 0; j < totalSentenceCount; j++) {
		            var generatedSentenceArray = [];
		            for (var newWordIndex = 0; newWordIndex < newWordData.length; newWordIndex++) {
			            var newWordList = newWordData[newWordIndex];
			            generatedSentenceArray.push(wordDecoration(newWordList[j]).word);
		            }

		            var generatedSentence = '<p dir="ltr">' + generatedSentenceArray.join(" ") + '</p>';

		            var sentenceData = {id:j, number:j+1, status:0, sentence:generatedSentence, star:sg.rateCharacter[1], created:createdDate, timestamp:createdTimestamp};

		            result.push(sentenceData);
	            }
            }

            return result;
        }

        function wordDecoration(word) {
            switch (word.wordType) {
                case sg.word.noun.code:
                    word.word = '<font color="#CD812B">' + word.word + '</fond>';
                    break;
                case sg.word.verb.code:
                    word.word = '<font color="#F17075">' + word.word + '</fond>';
                    break;
                case sg.word.adverb.code:
                    word.word = '<font color="#7B6A97">' + word.word + '</fond>';
                    break;
                case sg.word.adjective.code:
                    word.word = '<font color="#608F63">' + word.word + '</fond>';
                    break;
            }

            return word;
        }

        function mixingWord(wordList, totalCount) {
            if (isUndefined(totalCount)) {
                totalCount = 30;
            }

            var result = [];
            for (var i = 0; i < totalCount; i++) {
                var randomNumber = getRandomNumber(wordList.length);
                result.push(wordList[randomNumber]);
            }

            return result;
        }

        function getRandomNumber(range) {
            var result = 0;
            for (var i = 0; i < 999; i++) {
                result = parseInt(Math.random() * range, 10);
            }

            return result;
        }

        function getWordDataByGenre(genre) {
            var wordData = [];

            for (var key in sg.word) {
                if (sg.word.hasOwnProperty(key)) {
                    wordData.push(getWordData(sg.word[key], genre));
                }
            }

            return wordData;
        }

        function updateGeneratedSentenceTabTitle(newTitle, count) {
            var $tabbarTitleElements = $("div[view_id='dt_tabbar']").find(".webix_item_tab");

            $tabbarTitleElements.each(function(index, elem) {
                if (index === 1) {
                    if (isUndefined(count) && !isUndefined(newTitle)) {
                        $(elem).text(newTitle);
                    } else {
                        $(elem).text("즐겨찾기 (" + count + ")");
                    }
                }
            });
        }
        function getGeneratedSentenceDataTable(genre) {
            if (isUndefined(genre)) {
                genre = sg.genre.poetry;
            }
            return {
                id: sg.dataTable.prefix + "generated_sentence", view: "datatable", columns: [
                    {id: "number", header: "No.", width: 50, css: "t_center"},
                    {id: "status", header: {content: "masterCheckbox"}, template: "{common.checkbox()}", width: 40},
                    {id: "sentence", header: "문장", sort:"string", fillspace: true},
                    {id: "created", header: "만든날", sort:"int", format:webix.i18n.fullDateFormatStr, width: 140, css: "t_center"}
                ],
                data: getGeneratedSentence(genre),
                hover:"word_datatable_row_hover",
                select:false,
                on : {
                    onItemClick : function(id, event, node) {
                        var item = this.getItem(id.row);
                        item.status = !item.status;

                        var generatedSentenceFavoriteDataTable = $$(sg.dataTable.prefix + "generated_sentence_favorite");

                        if (item.status) {
                            this.addRowCss(id.row, "checked_row");

                            item.number = generatedSentenceFavoriteDataTable.count() + 1;
                            generatedSentenceFavoriteDataTable.add(item);
                            generatedSentenceFavoriteDataTable.addRowCss(item.id, "checked_row");
                        } else {
                            this.removeRowCss(id.row, "checked_row");

                            generatedSentenceFavoriteDataTable.remove(item.id);
                        }
                        this.refresh(id.row);

                        updateGeneratedSentenceTabTitle(null, generatedSentenceFavoriteDataTable.count());
                    }
                }
            }
        }

        function getGeneratedSentenceFavoriteDataTable() {
            return {
                id: sg.dataTable.prefix + "generated_sentence_favorite", view: "datatable", columns: [
                    {id: "number", header: "No.", width: 50, css: "t_center"},
                    {id: "status", header: {content: "masterCheckbox"}, template: "{common.checkbox()}", width: 40},
                    {id: "sentence", header: "문장", sort:"string", fillspace: true, css:"sentence"},
                    {id: "star", header: "평가", sort:"string", width: 100, css: "t_center"},
                    {id: "created", header: "만든날", sort:"int", format:webix.i18n.fullDateFormatStr, width: 140, css: "t_center"}
                ],
                data: [],
                hover:"word_datatable_row_hover",
                select:false,
                on : {
                    onItemClick : function(id, event, node) {
                        var item = this.getItem(id.row);
                        item.status = !item.status;
                        if (item.status) {
                            this.addRowCss(id.row, "checked_row");
                        } else {
                            this.removeRowCss(id.row, "checked_row");
                        }
                        this.refresh(id.row);
                    }
                }
            }
        }

        function getFavoriteRateDataTable(rate) {
            return {
                id: sg.dataTable.prefix + "rate", view: "datatable", columns: [
                    {id: "number", header: "No.", width: 50, css: "t_center"},
                    {id: "status", header: {content: "masterCheckbox"}, template: "{common.checkbox()}", width: 40},
                    {id: "sentence", header: "문장", sort:"string", fillspace: true, css:"sentence"},
                    {id: "created", header: "만든날", sort:"int", format:webix.i18n.fullDateFormatStr, width: 140, css: "t_center"}
                ],
                data: getFavoriteItemByRate(rate),
                hover:"word_datatable_row_hover",
                select:false,
                on : {
                    onItemClick : function(id, event, node) {
                        var item = this.getItem(id.row);
                        item.status = !item.status;
                        if (item.status) {
                            this.addRowCss(id.row, "checked_row");
                        } else {
                            this.removeRowCss(id.row, "checked_row");
                        }
                        this.refresh(id.row);
                    }
                }
            }
        }

        function getFavoriteNameDataTable(categoryId) {
            return {
                id: sg.dataTable.prefix + "name", view: "datatable", columns: [
                    {id: "number", header: "No.", width: 50, css: "t_center"},
                    {id: "status", header: {content: "masterCheckbox"}, template: "{common.checkbox()}", width: 40},
                    {id: "sentence", header: "문장", sort:"string", fillspace: true, css:"sentence"},
                    {id: "star", header: "평가", sort:"string", width: 100, css: "t_center"},
                    {id: "created", header: "만든날", sort:"int", format:webix.i18n.fullDateFormatStr, width: 140, css: "t_center"}
                ],
                data: getFavoriteItemByCategoryId(categoryId),
                hover:"word_datatable_row_hover",
                select:false,
                on : {
                    onItemClick : function(id, event, node) {
                        var item = this.getItem(id.row);
                        item.status = !item.status;
                        if (item.status) {
                            this.addRowCss(id.row, "checked_row");
                        } else {
                            this.removeRowCss(id.row, "checked_row");
                        }
                        this.refresh(id.row);
                    }
                }
            }
        }

        function getWordDataFromServer(word, genre) {
            var jsonData = webix.ajax().sync().post("get/word/" + word.code + "/" + genre.code);
            var statusCode = jsonData.status;
            var result = [];
            if (statusCode === 200) {
	            var responseText = jsonData.responseText;
                result = JSON.parse(responseText);
                var count = 1;
                $(result).each(function(index, value) {
                    value.status = 0;
                    value.number = count++;
                    value.created = new Date(Number(value.created));
                    result[index] = value;
                });
            }
            return result;
        }

        function getWordData(word, genre) {
            return getWordDataFromServer(word, genre);
        }

        function getWordCountInGenreFromServer(genre) {
            var countData = webix.ajax().sync().post("get/word/count/genre/" + genre.code);
            var statusCode = countData.status;
            var result = 0;
            if (statusCode === 200) {
                result = countData.responseText;
            }
            return result;
        }

        function getWordCountInGenre(genre) {
            return getWordCountInGenreFromServer(genre);
        }

        function getGenreData(isIncludeEtc) {
            if (isUndefined(isIncludeEtc)) {
                isIncludeEtc = false;
            }

            var result = [];
            for(var key in sg.genre) {
                if (sg.genre.hasOwnProperty(key)) {
                    if (!isIncludeEtc && key === "etc") {
                        break;
                    }

                    var genre = sg.genre[key];
                    var count = getWordCountInGenre(genre);
                    result.push({id:genre.id, icon:"support", value : genre.name, badge:count});
                }
            }

            return result;
        }

        function updateFavoriteNameDataTable(categoryId) {
            var favoriteData = getFavoriteItemByCategoryId(categoryId);
            $$(sg.dataTable.prefix + "name").clearAll();
            $$(sg.dataTable.prefix + "name").parse(favoriteData);
        }

        function updateFavoriteRateDataTable(rate) {
            var favoriteData = getFavoriteItemByRate(rate);
            $$(sg.dataTable.prefix + "rate").clearAll();
            $$(sg.dataTable.prefix + "rate").parse(favoriteData);
        }

        function updateWordDataTable(genre) {
            var availableWords = sg.word;
            for(var key in availableWords) {
                if (availableWords.hasOwnProperty(key)) {
                    var wordData = getWordData(availableWords[key], genre);
                    $$(sg.dataTable.prefix + availableWords[key].id).clearAll();
                    $$(sg.dataTable.prefix + availableWords[key].id).parse(wordData);
                }
            }
        }

        function updateGeneratedSentenceDataTable(genre) {
            var generatedWordData = getGeneratedSentence(genre);

            clearAllGeneratedSentenceDataTable();

            $$(sg.dataTable.prefix + "generated_sentence").parse(generatedWordData);
        }

        function clearAllWordDataTable() {
            var availableWords = sg.word;
            for(var key in availableWords) {
                if (availableWords.hasOwnProperty(key)) {
                    $$(sg.dataTable.prefix + availableWords[key].id).clearAll();
                }
            }
        }

        function clearAllGeneratedSentenceDataTable() {
            $$(sg.dataTable.prefix + "generated_sentence").clearAll();
            $$(sg.dataTable.prefix + "generated_sentence_favorite").clearAll();
        }

        function createNewWordData(newWordValue) {
            var dateObj = new Date();
            var currentTime = dateObj.getTime();
            return {id:currentTime, status:0, number: 0, word:newWordValue, wordType:0, genreType:0, created:dateObj, backup:0};
        }

        function createNewWord(word, genre) {
            var newWordValue = $$("new_word_input").getValue();
            if (newWordValue !== "") {
                var currentTabBarItemId = $$(sg.dataTable.prefix + "tabbar").getValue();
                var currentWordId = currentTabBarItemId.replace(sg.dataTable.prefix, "");
                var currentWord = sg.word[currentWordId];
                var currentGenreId = $$("genre_list_side_menu").getSelectedItem().id;
                var currentGenre = sg.genre[currentGenreId];

                var newData = createNewWordToServer(currentWord, currentGenre, newWordValue);

	            if (newData) {
		            $$(currentTabBarItemId).add(newData, 0);
		            $$(currentTabBarItemId).addRowCss(newData.id, "new_word_value");
	            }
            }
        }

        function isNotExistWord(newWord) {
	        var currentDataTableId = $$("dt_tabbar").getValue();
	        var currentDataTable = $$(currentDataTableId);

	        var result = currentDataTable.find(function (obj) {
		        return obj.word.toLowerCase().indexOf(newWord) !== -1;
	        });

	        return result.length === 0;
        }
        function createNewWordToServer(word, genre, newWord) {
	        var result;
	        if (isNotExistWord(newWord)) {
		        var dateObj = new Date();
		        var currentTime = dateObj.getTime();
		        newWord = encodeURIComponent(newWord);
		        var newWordResponseData = webix.ajax().sync().post("new/word/" + word.code + "/" + genre.code + "/" + newWord + "/" + currentTime);

		        if (newWordResponseData.status === 200) {
			        var jsonData = JSON.parse(newWordResponseData.responseText);
			        jsonData.status = 0;
			        jsonData.number = 0;
			        jsonData.created = new Date(Number(jsonData.created));

			        result = jsonData;
		        }
	        } else {
		        showMessagePopup("존재하는 단어 입니다 : " + newWord);
	        }

	        return result;
        }

        function getFavoriteRateItemCount(rate) {
            var itemCountResult = webix.ajax().sync().post("get/favorite/rate/count/" + rate);
            var result = 0;
            if (itemCountResult.status === 200) {
                result = itemCountResult.responseText;
            }

            return result;
        }

        function getFavoriteCategoriesFromServer() {
            var favoriteCategoriesResult = webix.ajax().sync().post("get/favorite/category");
            var result = [];
            if (favoriteCategoriesResult.status === 200) {
                result = JSON.parse(favoriteCategoriesResult.responseText);

                $(result).each(function(index, category) {
                    category.value = category.name;
                    category.icon = "support";
                    category.badge = getFavoriteCategoryItemCount(category.id);

                    result[index] = category;
                });
            }

            return result;
        }

        function getFavoriteCategoryItemCount(categoryId) {
            var favoriteCategoryItemCountResult = webix.ajax().sync().post("get/favorite/category/item/count/" + categoryId);
            var result = 0;
            if (favoriteCategoryItemCountResult.status === 200) {
                result = favoriteCategoryItemCountResult.responseText;
            }

            return result;
        }

        function getFavoriteItemByRate(rate) {
            var favoriteItemResult = webix.ajax().sync().post("get/favorite/rate/item/" + rate);

            var result = [];
            if (favoriteItemResult.status === 200) {
                result = JSON.parse(favoriteItemResult.responseText);

                var count = 1;
                $(result).each(function(index, favorite) {
                    favorite.status = 0;
                    favorite.created = new Date(Number(favorite.created));
                    favorite.number = count++;
                    var rateValue = favorite.rate;
                    favorite.star = sg.rateCharacter[rateValue];

                    result[index] = favorite;
                });
            }

            return result;
        }

        function getFavoriteItemByCategoryId(categoryId) {
            var favoriteItemResult = webix.ajax().sync().post("get/favorite/item/" + categoryId);

            var result = [];
            if (favoriteItemResult.status === 200) {
                result = JSON.parse(favoriteItemResult.responseText);

                var count = 1;
                $(result).each(function(index, favorite) {
                    favorite.status = 0;
                    favorite.created = new Date(Number(favorite.created));
                    favorite.number = count++;
                    var rateValue = favorite.rate;
                    favorite.star = sg.rateCharacter[rateValue];

                    result[index] = favorite;
                });
            }

            return result;
        }

        function showWaitDialog() {
            $.blockUI({ css: {
                border: 'none',
                padding: '15px',
                backgroundColor: '#000',
                '-webkit-border-radius': '10px',
                '-moz-border-radius': '10px',
                opacity: .5,
                color: '#fff'
            } });
//            $$("main_container").disable();
//            $$("main_container").showProgress({type:"icon", delay:1, icon:"spinner"});
        }

        function hideWaitDialog() {
            $.unblockUI();
//            $$("main_container").enable();
//            $$("main_container").hideProgress();
        }

        function getWordCountByWordTypeAndGenreType(word, genre) {
            var wordCountResult = webix.ajax().sync().post("get/word/count/type/" + word.code + "/genre/" + genre.code);
            var result = 0;

            if (wordCountResult.status === 200) {
                result = wordCountResult.responseText;
            }

            return result;
        }

        function getCurrentGenre() {
            var selectedItem = $$("genre_list_side_menu").getSelectedItem();
            return sg.genre[selectedItem.id];
        }

        function dataTableTabBarTitleAddWordCount(genreId, titleArray) {
            var $tabbarTitleElements = $("div[view_id='dt_tabbar']").find(".webix_item_tab");

            $tabbarTitleElements.each(function(index, elem) {
                var newText;
                if (isUndefined(titleArray)) {
                    var elemId = $(elem).attr("button_id");
                    var wordId = elemId.replace("dt_", "");
                    var word = sg.word[wordId];
                    var genre;
                    if (isUndefined(genreId)) {
                        genre = getCurrentGenre();
                    } else {
                        genre = sg.genre[genreId];
                    }

                    var wordCount = getWordCountByWordTypeAndGenreType(word, genre);
                    var originalText = $(elem).text();
                    newText = word.name + "(" + wordCount + ")";
                } else {
                    newText = titleArray[index];
                }
                $(elem).text(newText);
            });
        }

        function updateFavoriteTabViewTitle(selectedItemText) {
            var $dtTabViewTitleElements = $("div[view_id='dt_tabview']").find(".webix_item_tab.webix_selected");
            $($dtTabViewTitleElements[0]).text(selectedItemText);
        }

        function getTopToolbar() {
	        return {
		        id:"toolbar", view:"toolbar",cols:[
			        { view:"label", template: "Sentence Generator 시어 생성기 사랑합니다♥"},
			        {
				        id:"show_word", view:"button", type:"icon", icon:"envelope", label:"단어보기", width:100, align:"left", on:{
					        onItemClick:function(id) {
	//                            showWaitDialog();
						        if (sg.context.currentMenuId !== "show_word") {
							        $$("body_layout").removeView("side_menu");
							        $$("body_layout").addView(webix.copy(getWordGenreMenuTabView()), 0);
	//                                $$("side_menu").select(sg.genre.poetry.id);
						        }

						        sg.context.currentMenuId = "show_word";

	//                            hideWaitDialog();
					        }
				        }
			        },
			        {
				        id:"show_favorite", view:"button", type:"icon", icon:"users", label:"즐겨찾기", width:100, align:"left", on:{
					        onItemClick:function(id) {
						        // TODO : 데이터 가지고 오는 동안 잠시 기다려주세요 띄워주는 기능 추가 하기
						        // (현재는 첫줄에 함수 호출 하여도 데이터를 다 가지고 올 때까지 다이얼로그가 안뜸)

	//                            showWaitDialog();

						        if (sg.context.currentMenuId !== "show_favorite") {
							        $$("body_layout").removeView("side_menu");
	//                                $$("body_layout").removeView("content_container");
							        $$("body_layout").addView(webix.copy(getFavoriteMenu()), 0);

	//                                var firstId = $$("fav_name_menu").getFirstId();
	//                                $$("fav_name_menu").select(firstId);

	//                                $$("body_layout").addView(createFavoriteNameContentContainer(firstId));
						        }

						        sg.context.currentMenuId = "show_favorite";

	//                            hideWaitDialog();
					        }
				        }
			        },
			        {
				        id:"show_generate", view:"button", type:"icon", icon:"cog", label:"문장생성", width:100, align:"left", on:{
					        onItemClick:function(id) {
	//                            showWaitDialog();
						        if (sg.context.currentMenuId !== "show_generate") {
							        $$("body_layout").removeView("side_menu");

							        $$("body_layout").addView(webix.copy(getGeneratedSentenceGenreMenuTabView()), 0);

						        }

						        sg.context.currentMenuId = "show_generate";

	//                            hideWaitDialog();
					        }
				        }
			        },
			        {
				        id:"show_setting", view:"button", type:"icon", icon:"cog", label:"설정", width:100, align:"left", on:{
					        onItemClick:function(id) {
						        showSettingWindow();
						        sg.context.currentMenuId = "show_setting";
					        }
				        }
			        }
		        ]
	        };
        }

        function getWordInputForm() {
	        return {
		        view: "form", id: "word_input_form", css: "word_input " + sg.dataTable.prefix + "noun", elements: [
			        {id:"word_input_title", view: "label", label: "명사"},
			        {
				        cols: [
					        {
						        id: "new_word_input", view: "text", label: "", on:{
							        onKeyPress: function(keyCode, event) {
								        if (keyCode === 13) {
	//                                        showLovePopup();
									        createNewWord();
									        this.setValue("");
								        }
							        }
						        }
					        },
					        {
						        view: "button", value: "입력", type: "form", width: 100, on:{
							        onItemClick: function(id, event) {
								        createNewWord();
								        return false;
							        }
						        }
					        }
				        ]
			        }
		        ]
	        };
        }

        function getFavoriteRateListTabView(rate, title) {
            return {
                id: sg.dataTable.prefix + "tabview", view: "tabview", cells: [
                    {
                        id: "fav_name", header: title, body : getFavoriteRateDataTable(rate)
                    }
                ]
            };
        }

        function getFavoriteNameListTabView(categoryId, title) {
            return {
                id: sg.dataTable.prefix + "tabview", view: "tabview", cells: [
                    {
                        id: "fav_name", header: title, body : getFavoriteNameDataTable(categoryId)
                    }
                ]
            };
        }

        function getWordListTabBar() {
            return {
                id:sg.dataTable.prefix + "tabbar", view: "tabbar", value:sg.dataTable.prefix + sg.word.noun.id, multiview:true, options: [
                    {id: sg.dataTable.prefix + sg.word.noun.id, value: sg.word.noun.name},
                    {id: sg.dataTable.prefix + sg.word.verb.id, value: sg.word.verb.name},
                    {id: sg.dataTable.prefix + sg.word.adverb.id, value: sg.word.adverb.name},
                    {id: sg.dataTable.prefix + sg.word.adjective.id, value: sg.word.adjective.name}
                ],
                on: {
                    onChange: function(newValue, oldValue) {
                        var wordInputTitle = $$("word_input_title");
                        var $wordInputTitle = jQuery("div[view_id='word_input_form']");
                        $wordInputTitle.removeClass(oldValue).addClass(newValue);
                        if (newValue === sg.dataTable.prefix + sg.word.noun.id) {
                            wordInputTitle.setValue(sg.word.noun.name);
                        } else if (newValue === sg.dataTable.prefix + sg.word.verb.id) {
                            wordInputTitle.setValue(sg.word.verb.name);
                        } else if (newValue === sg.dataTable.prefix + sg.word.adverb.id) {
                            wordInputTitle.setValue(sg.word.adverb.name);
                        } else if (newValue === sg.dataTable.prefix + sg.word.adjective.id) {
                            wordInputTitle.setValue(sg.word.adjective.name);
                        }

                        var titleArray = this.titleArray;

                        var currentGenre = getCurrentGenre();
                        dataTableTabBarTitleAddWordCount(currentGenre.id, titleArray);
                    },
                    onBeforeTabClick : function() {
                        var $tabbarTitleElements = $("div[view_id='dt_tabbar']").find(".webix_item_tab");

                        this.titleArray = [];

                        var titleArray = this.titleArray;
                        $tabbarTitleElements.each(function(index, elem) {
                            var elemId = $(elem).attr("button_id");
                            var wordId = elemId.replace("dt_", "");
                            var word = sg.word[wordId];

                            var originalText = $(elem).text();
                            if (originalText.indexOf("(") > -1) {
                                titleArray.push(originalText);
                            }
                        });
                    }
                }
            };
        }

        function getGeneratedSentenceListTabBar() {
            return {
                id:sg.dataTable.prefix + "tabbar", view: "tabbar", value:sg.dataTable.prefix + "generated_sentence", multiview:true, options: [
                    {id: sg.dataTable.prefix + "generated_sentence", value: "창조된 문장들 (" + sg.context.settingValue.sentenceCount + ")"},
                    {id: sg.dataTable.prefix + "generated_sentence_favorite", value: "즐겨찾기 (0)"}
                ],
                on: {
                    onChange: function(newValue, oldValue) {
                        var titleArray = this.titleArray;
                        updateGeneratedSentenceTabTitle(titleArray[1]);
                    },
                    onBeforeTabClick : function() {
                        var $tabbarTitleElements = $("div[view_id='dt_tabbar']").find(".webix_item_tab");

                        this.titleArray = [];

                        var titleArray = this.titleArray;
                        $tabbarTitleElements.each(function(index, elem) {
                            var elemId = $(elem).attr("button_id");
                            var wordId = elemId.replace("dt_", "");
                            var word = sg.word[wordId];

                            var originalText = $(elem).text();
                            if (originalText.indexOf("(") > -1) {
                                titleArray.push(originalText);
                            }
                        });
                    }
                }
            };
        }

        function getWordDataTableList(genre) {
            return {
                id:"data_table_cells", cells:[
                    getWordDataTable(sg.word.noun, genre),
                    getWordDataTable(sg.word.verb, genre),
                    getWordDataTable(sg.word.adverb, genre),
                    getWordDataTable(sg.word.adjective, genre)
                ]
            };
        }

        function getGeneratedSentenceDataTableList(genre) {
            return {
                id:"data_table_cells", cells:[
                    getGeneratedSentenceDataTable(genre),
                    getGeneratedSentenceFavoriteDataTable()
                ]
            };
        }

        function createFavoriteRateContentContainer(rate, title) {
            $$("body_layout").removeView("content_container");
            $$("body_layout").addView(getFavoriteRateContentContainer(rate, title));
        }

        function createFavoriteNameContentContainer(categoryId, title) {
            $$("body_layout").removeView("content_container");
            $$("body_layout").addView(getFavoriteNameContentContainer(categoryId, title));
        }

        function createWordContentContainer(genre) {
            $$("body_layout").removeView("content_container");
            $$("body_layout").addView(getWordContentContainer(genre));
        }

        function createGeneratedSentenceContentContainer(genre) {
            $$("body_layout").removeView("content_container");
            $$("body_layout").addView(getGeneratedSentenceContentContainer(genre));
        }

        function getFavoriteRateMenu() {
            return {
                id: "fav_rate_menu", view: "menu", layout: "y", select: true, width: 240, data: [
                    {id: 5, icon: "support", value: sg.rateCharacter[5], badge: getFavoriteRateItemCount(5)},
                    {id: 4, icon: "support", value: sg.rateCharacter[4], badge: getFavoriteRateItemCount(4)},
                    {id: 3, icon: "support", value: sg.rateCharacter[3], badge: getFavoriteRateItemCount(3)},
                    {id: 2, icon: "support", value: sg.rateCharacter[2], badge: getFavoriteRateItemCount(2)},
                    {id: 1, icon: "support", value: sg.rateCharacter[1], badge: getFavoriteRateItemCount(1)}
                ],
                on: {
                    onMenuItemClick: function (rate) {
                        var favoriteDataTable = $$(sg.dataTable.prefix + "rate");
                        var selectedItemText = this.getItem(rate).value;
                        selectedItemText = selectedItemText + " (" + this.getItem(rate).badge + ")";

                        if (isUndefined(favoriteDataTable)) {
                            createFavoriteRateContentContainer(rate, selectedItemText);
                        } else {
                            updateFavoriteTabViewTitle(selectedItemText);
                            updateFavoriteRateDataTable(rate);
                        }
                    }
                }
            };
        }

        function getFavoriteCategoryMenu() {
            return {
                id: "fav_name_menu", view: "menu", layout: "y", select:true, width: 240, scroll:"y",
                data: getFavoriteCategoriesFromServer(),
                on: {
                    onMenuItemClick: function (id) {
                        var favoriteDataTable = $$(sg.dataTable.prefix + "name");
                        var selectedItemText = this.getItem(id).value;
                        selectedItemText = selectedItemText + " (" + this.getItem(id).badge + ")";

                        if (isUndefined(favoriteDataTable)) {
                            createFavoriteNameContentContainer(id, selectedItemText);
                        } else {
                            updateFavoriteTabViewTitle(selectedItemText);
                            updateFavoriteNameDataTable(id);
                        }
                    }
                }
            };
        }

        function getFavoriteMenu() {
            return {
                id: "side_menu", view: "tabview", width: 242, cells: [
                    {
                        id: "fav_name", header: "이름별", body : getFavoriteCategoryMenu()
                    },
                    {
                        id: "fav_rate", header: "평가별", body : getFavoriteRateMenu()
                    }
                ]
            };
        }

        function getWordGenreMenuTabView() {
            return {
                id: "side_menu", view: "tabview", width: 242, cells: [
                    {
                        id: "genre_select", header: "장르 선택", body : getGenreListMenu()
                    }
                ]
            };
        }

        function getGeneratedSentenceGenreMenuTabView() {
            return {
                id: "side_menu", view: "tabview", width: 242, cells: [
                    {
                        id: "generated_sentence_genre_select", header: "장르 선택", body : getGenerateMenu()
                    }
                ]
            };
        }

        function getGenerateMenu() {
            return {
                id: "generated_sentence_side_menu", view: "menu", layout: "y", select:true, width: 240, data: getGenreData(true),
                on: {
                    onMenuItemClick: function (id) {
                        var selectedGenre = sg.genre[id];
                        var generatedSentenceDataTable = $$(sg.dataTable.prefix + "generated_sentence");

                        if (isUndefined(generatedSentenceDataTable)) {
                            createGeneratedSentenceContentContainer(selectedGenre);
                        } else {
                            var selectedItem = this.getItem(id);
                            var badgeValue = Number(selectedItem.badge);
                            if (badgeValue > 0) {
                                updateGeneratedSentenceDataTable(selectedGenre);
                            } else {
                                clearAllGeneratedSentenceDataTable();
                            }
                        }
                    }
                }
            };
        }

        function getGenreListMenu() {
            return {
                id: "genre_list_side_menu", view: "menu", layout: "y", select: true, width: 240, data: getGenreData(),
                on: {
                    onMenuItemClick: function (id) {
                        var selectedGenre = sg.genre[id];
                        var wordListDataTable = $$(sg.dataTable.prefix + "noun");

                        if (isUndefined(wordListDataTable)) {
                            createWordContentContainer(selectedGenre);
                        } else {
                            var selectedItem = this.getItem(id);
                            var badgeValue = Number(selectedItem.badge);
                            if (badgeValue > 0) {
                                updateWordDataTable(selectedGenre);
                            } else {
                                clearAllWordDataTable();
                            }
                        }
                    },
                    onAfterSelect: function(id) {
                        dataTableTabBarTitleAddWordCount(id);
                    }
                }
            };
        }

        function getFavoriteNameContentContainer(categoryId, title) {
            return {
                id:"content_container", rows: [
                    getFavoriteNameListTabView(categoryId, title)
                ]
            };
        }

        function getFavoriteRateContentContainer(rate, title) {
            return {
                id:"content_container", rows: [
                    getFavoriteRateListTabView(rate, title)
                ]
            };
        }

        function getWordContentContainer(genre) {
            return {
                id:"content_container", rows: [
                    getWordInputForm(),
                    {$template: "Spacer", height: 10},
                    getWordListTabBar(),
                    getWordDataTableList(genre)
                ]
            };
        }

        function getGeneratedSentenceContentContainer(genre) {
            return {
                id:"content_container", rows: [
                    getGeneratedSentenceListTabBar(),
                    getGeneratedSentenceDataTableList(genre)
                ]
            };
        }

        function getBodyLayout() {
	        return {
		        id:"body_layout",
		        cols: [
			        getWordGenreMenuTabView(),
			        {$template: "Spacer", width: 10},
			        getWordContentContainer()
		        ]
	        };
        }

        function getWordSettingOptionsData() {
	        return [
		        {id: "0", value: "<font color='#CD812B'>명사</font>"},
		        {id: "1", value: "<font color='#F17075'>동사</font>"},
		        {id: "2", value: "<font color='#7B6A97'>부사</font>"},
		        {id: "3", value: "<font color='#608F63'>형용사</font>"},
		        {id: "4", value: "무작위"},
		        {id: "5", value: "없음"}
	        ];
        }

        function getSettingValue() {
	        var settingValueResult = webix.ajax().sync().post("get/setting");
	        var result = {};

	        if (settingValueResult.status === 200) {
		        var responseText = settingValueResult.responseText;
		        result = JSON.parse(responseText)[0];
		        for (var key in result) {
			        if (result.hasOwnProperty(key)) {
				        result[key] = result[key].toString();
			        }
		        }
	        }

	        return result;
        }

        function updateSettingValue(settingValue) {
	        webix.ajax().headers({
		        "Content-type":"application/json"
	        }).post("update/setting", JSON.stringify(settingValue), function(text, obj, response){
		        if (response.status === 200) {
			        showMessagePopup(text);
		        } else {
			        showMessagePopup("설정 저장 실패");
		        }
	        });
        }

        function getSettingForm() {
	        return {
		        id: "setting_form", view: "form", borderless:true, elements: [
			        { id: "sentenceCount", view: "richselect", label: "<strong>문장 생성 갯수</strong>", value: sg.context.settingValue.sentenceCount, options: [
				        {id: 20, value: "20"},
				        {id: 30, value: "30"},
				        {id: 40, value: "40"},
				        {id: 50, value: "50"}
			        ]},
			        { id: "firstType", view: "richselect", label: "<strong>첫번째 단어</strong>", value: sg.context.settingValue.firstType, options: getWordSettingOptionsData() },
			        { id: "secondType", view: "richselect", label: "<strong>두번째 단어</strong>", value: sg.context.settingValue.secondType, options: getWordSettingOptionsData() },
			        { id: "thirdType", view: "richselect", label: "<strong>세번째 단어</strong>", value: sg.context.settingValue.thirdType, options: getWordSettingOptionsData() },
			        { id: "fourthType", view: "richselect", label: "<strong>네번째 단어</strong>", value: sg.context.settingValue.fourthType, options: getWordSettingOptionsData() },
			        {cols: [
				        {
					        view: "button", value: "저장", type: "form", click: function() {
						        var selectElems = $$("setting_form").getChildViews();

					            if (!isUndefined(selectElems) && selectElems.length > 0) {
						            $(selectElems).each(function(index, elem) {
							            var elemViewId = elem.getNode().getAttribute("view_id");
							            if (!isUndefined(elemViewId) && !isUndefined(sg.context.settingValue[elemViewId])) {
								            sg.context.settingValue[elemViewId] = elem.getValue();
							            }
						            });

						            updateSettingValue(sg.context.settingValue);
					            }

					            $$("setting-window").close();
					        }
				        },
				        {
					        view: "button", value: "닫기", type: "danger", click: function() {
						        $$("setting-window").close();
					        }
				        }
			        ]}
		        ],
		        elementsConfig: {
			        labelPosition: "top"
		        }
	        };
        }

        function showSettingWindow() {
	        webix.ui({
		        id: "setting-window",
		        view:"window",
		        width: 240,
		        position:"center",
		        head:"설정",
		        body: getSettingForm(),
		        modal: true
	        }).show();
        }

        webix.ui({
            id:"main_container", type:"wide", css:"main_container", cols:[
                {
                    type: "space", width:960, rows: [
                        getTopToolbar(),
	                    getBodyLayout()
                    ]
                }
            ]
        });

        webix.extend($$("main_container"), webix.ProgressBar);

        $$("genre_list_side_menu").select(sg.genre.poetry.id);
        $$("word_input_title").setValue(sg.word.noun.name);
    </script>
{% endblock %}
